Majority Element
Array
Greedy
AsanaEtsyJPMorganMicrosoft
Problem Statement
Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears strictly more than N/2 times in the array.

If no majority exists, return -1.

Example 1:
Input:

N = 3 
A[] = {1,2,3}

Output:
-1

Explanation:

Since, each element in {1,2,3} appears only once so there is no majority element.

Example 2:
Input:

N = 5 
A[] = {3,1,3,3,2}

Output:

3

Explanation:

Since, 3 is present more than N/2 times, so it is the majority element.

Constraints:
1 ≤ N ≤ 107
0 ≤ A[i] ≤ 106
public class Solution
{
    public static int majorityElement(int arr[], int size)
    {
      int count=0;
      int majorityElement=arr[0];

      for(int i=0;i<size;i++){
        if(arr[i]==majorityElement){
          count++;
        }else if(arr[i]!=majorityElement){
          count--;
          if(count<=0){
            majorityElement=arr[i];
          count=1;
          }
        }
      }
      System.out.println("the majority : "+majorityElement+" the count is "+count);
      int count2=0;
      for(int x:arr){
        if(x==majorityElement){
            count2++;
        }
      }
      System.out.println("the count2 is "+count2);
      return count2>arr.length/2?majorityElement:-1;  
    }
}